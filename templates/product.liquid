{% comment %}

  Rich snippets (itemscope, itemtype, etc.) for products are a theme requirement,
  and allow search engines to easily understand what the content is.

  For more information on these Scheme.org tags, visit:
    - http://schema.org/docs/gs.html

{% endcomment %}

<div itemscope itemtype="http://schema.org/Product">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | product_img_url: 'grande' }}">

  {% include 'breadcrumb' %}

  <div class="grid">
    <div class="grid-item large--one-half">

      {% comment %}
        If we only have one product image, show a large version of it.
        If we have more than 1, show it then loop through the rest as thumbnails.
      {% endcomment %}
      {% if product.images.size == 0 %}

        <div class="product-photo-container" id="productPhoto">
          <img src="{{ '' | product_img_url: 'grande' }}" alt="" id="productPhotoImg">
        </div>

      {% else %}

        <div class="product-photo-container" id="productPhoto">
          <a href="{{ product.featured_image.src | product_img_url: 'original' }}">
            <img src="{{ product.featured_image.src | product_img_url: 'grande' }}" alt="{{ product.featured_image.alt | escape }}" id="productPhotoImg">
          </a>
        </div>

        {% comment %}
          If we have more than one product image, loop through them and create thumbnails.

          By default, images will link to their grande size (600x600).
          Thumbnail swapping is enabled in shop.js.liquid.
        {% endcomment %}
        {% if product.images.size > 1 %}
          <ul class="product-photo-thumbs grid-uniform" id="productThumbs">

            {% for image in product.images %}
              <li class="grid-item one-quarter">
                <a href="{{ image.src | product_img_url: 'grande' }}" class="product-photo-thumb">
                  <img src="{{ image.src | product_img_url: 'compact' }}" alt="{{ image.alt | escape }}">
                </a>
              </li>
            {% endfor %}

          </ul>
        {% endif %}

      {% endif %}

    </div>

    <div class="grid-item large--one-half">

      <h2 itemprop="name">{{ product.title }}</h2>

      <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">

        <meta itemprop="priceCurrency" content="{{ shop.currency }}">

        <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

        {% comment %}
          ID addToCartForm is a selector for the ajaxify cart plugin
        {% endcomment %}
        <form action="/cart/add" method="post" enctype="multipart/form-data" id="addToCartForm">

          {% comment %}
            Add product variants as a dropdown.
              - By default, each variant (or combination of variants) will display as its own <option>
              - To separate these into multiple steps, which we suggest, use option_selection.js (see below)

            You can leverage jQuery to add a callback on page load and each time the select element changes:
              - Include option_selection.js (as seen at the bottom of this file)
              - This allows you to use JavaScript anytime the variant dropdown changes
              - This also separates out your variant options (ie. size, color, etc.) to separate select elements

            For more information on products with multiple options, visit:
              - http://docs.shopify.com/support/your-website/themes/can-i-make-my-theme-use-products-with-multiple-options#update-product-liquid

          {% endcomment %}
          <select name="id" id="productSelect" class="product-variants">
            {% for variant in product.variants %}
              {% if variant.available %}

                {% comment %}
                  Note: if you use option_selection.js, your <select> tag will be overwritten, meaning what you have inside <option> will not reflect what you coded below.
                {% endcomment %}
                <option value="{{variant.id}}">
                  {{ variant.title }} - {{ variant.price | money_with_currency }}
                </option>

              {% else %}
                <option disabled="disabled">
                  {{ variant.title }} - Sold out
                </option>
              {% endif %}
            {% endfor %}
          </select>

          {% comment %}
            Optionally show the 'compare at' or original price of the product.
          {% endcomment %}
          <span id="productPrice" class="h2{% if product.compare_at_price > product.price %} on-sale{% endif %}" itemprop="price">
            {{ product.price | money }}
          </span>

          {% if product.compare_at_price > product.price %}
            <span id="comparePrice" class="h5">
              Compare at:
              {{ product.compare_at_price_max | money }}
            </span>
          {% endif %}

          <label for="quantity">Quantity</label>
          <input type="number" id="quantity" name="quantity" value="1" min="1">

          <input type="submit" name="add" class="btn" id="addToCart" value="Add to Cart">
        </form>

      </div>

      <div class="product-description rte" itemprop="description">
        {{ product.description }}
      </div>

      {% comment %}
        If the user is on a collection product page (ie with /collections/collection-handle/products/product-handle)
        in the URL, we can show next/previous links to other products in the collection.
      {% endcomment %}
      {% if collection %}
        {% if collection.previous_product or collection.next_product %}
          <p>

          {% if collection.previous_product %}
            {% capture prev_url %}{{ collection.previous_product}}#content{% endcapture %}
            <span class="left">
              {{ '&larr; Previous Product' | link_to: prev_url }}
            </span>
          {% endif %}

          {% if collection.next_product %}
            {% capture next_url %}{{ collection.next_product}}#content{% endcapture %}
            <span class="right">
              {{ 'Next Product &rarr;' | link_to: next_url }}
            </span>
          {% endif %}

          </p>
        {% endif %}
      {% endif %}

    </div>
  </div>

</div>
